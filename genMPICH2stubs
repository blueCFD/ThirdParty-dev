#! /bin/bash
#------------------------------------------------------------------------------
# License
#     Copyright (C) 2011-2014 blueCAPE Lda
#
#     This file is part of blueCAPE's unofficial mingw patches for OpenFOAM.
#     For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#     This file is a derivative work of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     genMPICH2stubs
#
# Description
#     This script generates the link library and prepares the include 
#   files for MPICH2.
#
#------------------------------------------------------------------------------

if ! isMinGW; then
  echo "Error: this script is meant to be used for MinGW compilers only!"
  exit 1
fi

# run from third-party directory only
cd ${0%/*} || exit 1
wmakeCheckPwd "$WM_THIRD_PARTY_DIR" || {
    echo "Error: Current directory is not \$WM_THIRD_PARTY_DIR"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}
. etc/tools/ThirdPartyFunctions
. etc/tools/makeExtraThirdPartyFunctions

#end of initializations -------------------------------------------

create_gcccompatible_library()
{
  echo -e "\033[1m creating libmpi.a \033[0m"
  cd $MPI_ARCH_PATH/lib
  gendef - mpich2mpi.dll > mpich2.def
  dlltool -d mpich2.def -l libmpi.a -D MPICH2MPI.DLL
}


patch_mpi_includes()
{

  echo -e "\033[1m patching mpi.h \033[0m"
  if [ "$WM_ARCH_OPTION" = "64" ]; then
    cd $MPI_ARCH_PATH/include
    grep "typedef __int64 MPI_Aint" mpi.h > /dev/null 2>&1 && \
echo '--- orig/include/mpi.h  2009-08-06 16:11:46.000000000 +0100
+++ mod/include/mpi.h 2009-10-12 12:59:08.000000000 +0100
@@ -331,7 +331,11 @@
 #define MPI_MODE_NOSUCCEED   16384 
 
 /* Definitions that are determined by configure. */
+#if defined(USE_GCC) || defined(__GNUC__)
+typedef long long MPI_Aint;
+#else
 typedef __int64 MPI_Aint;
+#endif
 typedef int MPI_Fint;
 /* FIXME: The following two definition are not defined by MPI and must not be
    included in the mpi.h file, as the MPI namespace is reserved to the MPI 
' | patch -p2

  fi
}


#script start ------------------------------------------------------

if [ ! -e "$MPI_ARCH_PATH/lib/mpich2mpi.dll" ]; then
  ./get-em so mpich2-win=default || {
    echo "Unable to retrieve and unpack necessary files for MPICH2."
    exit 1
  }
fi

if [ ! -e "$MPI_ARCH_PATH/lib/libmpi.a" ]; then

  echo -e "\033[1m Generating MPICH2 library interfaces for MinGW... \033[0m"

  create_gcccompatible_library
  patch_mpi_includes
  echo -e "\033[1m All done. \033[0m"
else
  echo -e "\033[1m MPICH2 stub is already built and ready to use. \033[0m"
fi
