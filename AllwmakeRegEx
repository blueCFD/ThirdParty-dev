#!/bin/sh
#------------------------------------------------------------------------------
# License
#     Copyright (C) 2011-2016 blueCAPE Lda
#
#     This file is part of blueCAPE's unofficial mingw patches for OpenFOAM.
#     For more information about these patches, visit:
#         http://www.bluecape.com.pt/blueCFD
#
#     This file is a derivative work of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     AllwmakeRegEx
#
# Description
#     Build script for RegEx for mingw.
#
#------------------------------------------------------------------------------
# run from third-party directory only
cd ${0%/*} || exit 1
wmakeCheckPwd "$WM_THIRD_PARTY_DIR" || {
    echo "Error: Current directory is not \$WM_THIRD_PARTY_DIR"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}

if ! isMinGW; then
  echo "Error: this script is meant to be used for MinGW compilers only!"
  exit 1
fi

. etc/tools/ThirdPartyFunctions
. etc/tools/makeExtraThirdPartyFunctions

#set script options
REGEXNAMENVERSION=mingw-libgnurx-2.5.1
REGEXFILE="mingw-libgnurx-2.5.1-src.tar.gz"
REGEXURL="http://downloads.sourceforge.net/mingw/UserContributed/regex/mingw-regex-2.5.1/${REGEXFILE}?use_mirror=mesh"
REGEXBUILD="$WM_THIRD_PARTY_DIR/build/$WM_ARCH$WM_COMPILER/$REGEXNAMENVERSION"
REGEXTARGET="$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$REGEXNAMENVERSION"
TARGET=$(${WM_CC} -dumpmachine)


apply_regex_w64_patch()
{
  cd "$WM_THIRD_PARTY_DIR/$REGEXNAMENVERSION"

  patch -p1 < $WM_THIRD_PARTY_DIR/etc/patches/patch_$REGEXNAMENVERSION

  cd $WM_THIRD_PARTY_DIR
}

configure_regex()
{
  mkdir -p "$REGEXBUILD"
  cd "$REGEXBUILD"
  echo "Configuring regex"

  # What build should we make
  definedBUILDmachine

  "$WM_THIRD_PARTY_DIR/$REGEXNAMENVERSION/configure" --prefix=$REGEXTARGET --build=$TARGET \
    --host=$BUILD > configure.log 2>&1
    #--with-build-sysroot=$PREFIX 
    #--with-sysroot=$GCCSYSROOT \
  if test $? -ne 0; then
    echo "Configure of regex failed - log available: $REGEXBUILD/configure.log"
    exit 1
  fi
  cd "$WM_THIRD_PARTY_DIR"
}


build_regex()
{
  cd "$REGEXBUILD"
  echo "Building regex"
  # -fno-exceptions
  make -j $WM_NCOMPPROCS CC="$WM_CC" > make.log 2>&1
  if test $? -ne 0; then
    echo "Make of regex failed - log available: $REGEXBUILD/make.log"
    exit 1
  fi
  cd "$WM_THIRD_PARTY_DIR"
}


install_regex()
{
  cd "$REGEXBUILD"
  echo "Installing regex"
  make install > make-install.log 2>&1
  if test $? -ne 0; then
    echo "Install of regex failed - log available: $REGEXBUILD/make-install.log"
    exit 1
  elif [ -d "${REGEXTARGET}/lib64" ]; then
    #this hack is needed on openSUSE
    mv "${REGEXTARGET}/lib64" "${REGEXTARGET}/lib"
  fi
  cd "$WM_THIRD_PARTY_DIR"
}

copyLibsToFoam()
{
  if [ -d "$REGEXTARGET/lib" ] && ! onWin; then
    mkdir -p $FOAM_LIBBIN
    if [ -d "$FOAM_LIBBIN" ]; then
      cp -r $REGEXTARGET/include/* $FOAM_SRC/OSspecific/MSwindows/
      cp $REGEXTARGET/lib/* $FOAM_LIBBIN/
      cp $REGEXTARGET/bin/* $FOAM_LIBBIN/
    fi
  fi
}


#check if download is necessary
isProjectInstalled $REGEXNAMENVERSION

if [ "$ALREADYUNPACKED" != "Yes" ]; then
  #download the necessary files
  downloadFile $REGEXFILE $REGEXURL

  #unpack the files
  unpackFile $REGEXFILE

  #move folder
  moveUnpackedFolder $REGEXFILE $REGEXNAMENVERSION

  #apply patches
  apply_regex_w64_patch
fi

#build only if necessary
isProjectInstalled $REGEXTARGET

if [ "$ALREADYUNPACKED" != "Yes" ]; then

  #build the library
  configure_regex
  build_regex
  install_regex
  copyLibsToFoam

else

  #copy without replacing
  copyLibsToFoam
  echo "regex already installed... run ./AllwcleanRegEx if you feel that it needs rebuilding!"

fi
