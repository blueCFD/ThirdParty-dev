#!/bin/sh
#------------------------------------------------------------------------------
# License
#     Copyright (C) 2011-2014 blueCAPE Lda
#
#     This file is derived from the branch "get-em" available here:
#         https://github.com/wyldckat/ThirdParty-2.0.x/commits/get-em
#
#     This file is part of blueCAPE's unofficial mingw patches for OpenFOAM.
#     For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#     It's licensed under the same license of the target software, namely GPL
#     v3 or above (see <http://www.gnu.org/licenses/>).
#
#     The target software is OpenFOAM(R) <http://www.openfoam.org>. It's
#     trademarked by and Copyright (C) 2011-2014 OpenFOAM Foundation
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# File
#     etc/tools/get-em/mingw-w64-crt
#
# Description
#     This script will gather the necessary information about the application.
#     This script expects to be executed in the base folder where the get-em script is.
#
#------------------------------------------------------------------------------

versionVar="mingw_w64_version"
appName="mingw-w64"
appDefaultSep="-"
appFileExt="tar.gz"
appFileExtB="tar.bz2"


#
# Shows the description for this application.
#
GE_showDesc()
{
  echo "mingw-w64-crt - Retrieve the MinGW-w64-CRT package. Size: 4 to 7MB"
}


#
# Updates the file defined in $versionCacheFile, using the mirror url $1 and
# uses the $testFile as a sandbox.
#
GE_update()
{
  wget "$1" -O $testFile > /dev/null 2>&1

  [ -e $versionCacheFile ] && rm $versionCacheFile
  [ -e ${versionCacheFile}_filenames ] && rm ${versionCacheFile}_filenames

  for fileExtensions in $appFileExt $appFileExtB; do
    grep -e '/'$appName'-v[0-9]\.[0-9\.]*\.'$fileExtensions'/' $testFile | \
      sed -e 's=.*/\('$appName'-v[0-9]\.[0-9\.]*\)'$fileExtensions'.*=\1=' \
      -e 's_'$appName'-v_'$appName'=_' \
      -e 's=\.$==' |  \
      sort -u >> $versionCacheFile

    grep -e '/'$appName'-v[0-9]\.[0-9\.]*\.'$fileExtensions'/' $testFile | \
      sed -e 's=.*/\('$appName'-v[0-9]\.[0-9\.]*'$fileExtensions'\).*=\1=' |  \
      sort -u >> ${versionCacheFile}_filenames
  done

  sort -V $versionCacheFile > $testFile
  cat $testFile > $versionCacheFile

  sort -V ${versionCacheFile}_filenames > $testFile
  cat $testFile > ${versionCacheFile}_filenames

  rm $testFile
}


#
# Receives the mirror url $1, the real version $2 and the variable $appFileExt.
# Shows the full url for the file to be downloaded.
#
GE_geturl()
{
  echo ${1}$(grep $2 ${versionCacheFile}_filenames)
}


#
# Echoes the name for the package file for storage. Receives the real version $1.
#
GE_getfilename()
{
  grep $1 ${versionCacheFile}_filenames
}


#
# Echoes the extension for the package file for storage. Receives the real version $1.
#
GE_getfileext()
{
  name=$(grep $1 ${versionCacheFile}_filenames)

  case $name in
    *.$appFileExt)
      echo $appFileExt
      ;;
    *.$appFileExtB)
      echo $appFileExtB
      ;;
  esac
}


#
# Echoes the relative path of the target folder. Receives the real version $1.
#
GE_getfolder()
{
  echo $appName-$1
}


#
# Echoes the number of folder levels counting from the left that the unpacker
# should drop. This is (or at least it should be) a prevention mechanism for
# tar/zipbombs.
#
GE_levels()
{
  echo 1
}


# Finally source the master script
. etc/tools/get-emScriptFunctions
