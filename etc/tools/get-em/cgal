#!/bin/sh
#------------------------------------------------------------------------------
# License
#     Copyright (C) 2011-2014 blueCAPE Lda
#
#     This file is derived from the branch "get-em" available here:
#         https://github.com/wyldckat/ThirdParty-2.0.x/commits/get-em
#
#     This file is part of blueCAPE's unofficial mingw patches for OpenFOAM.
#     For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#     It's licensed under the same license of the target software, namely GPL
#     v3 or above (see <http://www.gnu.org/licenses/>).
#
#     The target software is OpenFOAM(R) <http://www.openfoam.org>. It's
#     trademarked by and Copyright (C) 2011-2014 OpenFOAM Foundation
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# File
#     etc/tools/get-em/cgal
#
# Description
#     This script will gather the necessary information about the application.
#     This script expects to be executed in the base folder where the get-em script is.
#
#------------------------------------------------------------------------------

versionVar="cgal_version"
appName="CGAL"
appDefaultSep="-"
appFileExt="tar.gz"


#
# Shows the description for this application.
#
GE_showDesc()
{
  echo "cgal - Retrieve the CGAL package. Size: 8 to 15MB"
}


#
# Updates the files defined in $versionCacheFile and ${versionCacheFile}_urls,
# using the mirror url $1 and uses the $testFile as a sandbox.
#
GE_update()
{
  wget --no-check-certificate "$1" -O $testFile > /dev/null 2>&1
  grep -e "\"/.*CGAL-[0-9.]*${appFileExt}" $testFile | \
    sed -e 's=.*>\(CGAL-.*\)\.'${appFileExt}'<.*=\1=' -e 's/-/=/' | \
    sort -u > ${versionCacheFile}

  grep -e "\"/.*CGAL-[0-9.]*${appFileExt}" $testFile | \
    sed -e 's=.*"\(/.*.'${appFileExt}'\)".*=https://gforge.inria.fr\1=' | \
    sort -u > ${versionCacheFile}_urls
  rm $testFile
}


#
# Receives the mirror url $1, the real version $2 and the variable $appFileExt.
# Shows the full url for the file to be downloaded.
#
GE_geturl()
{
  grep -e "-${2}\.$appFileExt" ${versionCacheFile}_urls
}


#
# Echoes the relative path of the target folder. Receives the real version $1.
#
GE_getfolder()
{
  echo CGAL-$1
}


#
# Echoes the number of folder levels counting from the left that the unpacker
# should drop. This is (or at least it should be) a prevention mechanism for
# tar/zipbombs.
#
GE_levels()
{
  echo 1
}


# Finally source the master script
. etc/tools/get-emScriptFunctions
